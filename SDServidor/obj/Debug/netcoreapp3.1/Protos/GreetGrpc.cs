// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/greet.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace SDServidor {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class Greeter
  {
    static readonly string __ServiceName = "greet.Greeter";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::SDServidor.ApostaPedido> __Marshaller_greet_ApostaPedido = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SDServidor.ApostaPedido.Parser));
    static readonly grpc::Marshaller<global::SDServidor.Resposta> __Marshaller_greet_Resposta = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SDServidor.Resposta.Parser));
    static readonly grpc::Marshaller<global::SDServidor.ApostaListaPedido> __Marshaller_greet_ApostaListaPedido = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SDServidor.ApostaListaPedido.Parser));
    static readonly grpc::Marshaller<global::SDServidor.ListaA> __Marshaller_greet_ListaA = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SDServidor.ListaA.Parser));
    static readonly grpc::Marshaller<global::SDServidor.ListaUtilizadorPedido> __Marshaller_greet_ListaUtilizadorPedido = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SDServidor.ListaUtilizadorPedido.Parser));
    static readonly grpc::Marshaller<global::SDServidor.ListaU> __Marshaller_greet_ListaU = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SDServidor.ListaU.Parser));
    static readonly grpc::Marshaller<global::SDServidor.PedidoGuardar> __Marshaller_greet_PedidoGuardar = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SDServidor.PedidoGuardar.Parser));
    static readonly grpc::Marshaller<global::SDServidor.ChaveWin> __Marshaller_greet_ChaveWin = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SDServidor.ChaveWin.Parser));
    static readonly grpc::Marshaller<global::SDServidor.ApostaWinPedido> __Marshaller_greet_ApostaWinPedido = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SDServidor.ApostaWinPedido.Parser));
    static readonly grpc::Marshaller<global::SDServidor.ListaAWin> __Marshaller_greet_ListaAWin = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SDServidor.ListaAWin.Parser));

    static readonly grpc::Method<global::SDServidor.ApostaPedido, global::SDServidor.Resposta> __Method_ApostaRegisto = new grpc::Method<global::SDServidor.ApostaPedido, global::SDServidor.Resposta>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ApostaRegisto",
        __Marshaller_greet_ApostaPedido,
        __Marshaller_greet_Resposta);

    static readonly grpc::Method<global::SDServidor.ApostaListaPedido, global::SDServidor.ListaA> __Method_ApostaLista = new grpc::Method<global::SDServidor.ApostaListaPedido, global::SDServidor.ListaA>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ApostaLista",
        __Marshaller_greet_ApostaListaPedido,
        __Marshaller_greet_ListaA);

    static readonly grpc::Method<global::SDServidor.ListaUtilizadorPedido, global::SDServidor.ListaU> __Method_UtilizadorLista = new grpc::Method<global::SDServidor.ListaUtilizadorPedido, global::SDServidor.ListaU>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UtilizadorLista",
        __Marshaller_greet_ListaUtilizadorPedido,
        __Marshaller_greet_ListaU);

    static readonly grpc::Method<global::SDServidor.PedidoGuardar, global::SDServidor.Resposta> __Method_ApostaGuadar = new grpc::Method<global::SDServidor.PedidoGuardar, global::SDServidor.Resposta>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ApostaGuadar",
        __Marshaller_greet_PedidoGuardar,
        __Marshaller_greet_Resposta);

    static readonly grpc::Method<global::SDServidor.ChaveWin, global::SDServidor.Resposta> __Method_ChaveWinRegisto = new grpc::Method<global::SDServidor.ChaveWin, global::SDServidor.Resposta>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ChaveWinRegisto",
        __Marshaller_greet_ChaveWin,
        __Marshaller_greet_Resposta);

    static readonly grpc::Method<global::SDServidor.ApostaWinPedido, global::SDServidor.ListaAWin> __Method_ApostaWinLista = new grpc::Method<global::SDServidor.ApostaWinPedido, global::SDServidor.ListaAWin>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ApostaWinLista",
        __Marshaller_greet_ApostaWinPedido,
        __Marshaller_greet_ListaAWin);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::SDServidor.GreetReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Greeter</summary>
    [grpc::BindServiceMethod(typeof(Greeter), "BindService")]
    public abstract partial class GreeterBase
    {
      /// <summary>
      ///Cliente para Utilizadores
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::SDServidor.Resposta> ApostaRegisto(global::SDServidor.ApostaPedido request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SDServidor.ListaA> ApostaLista(global::SDServidor.ApostaListaPedido request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///Cliente para Administração  do sistema
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::SDServidor.ListaU> UtilizadorLista(global::SDServidor.ListaUtilizadorPedido request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SDServidor.Resposta> ApostaGuadar(global::SDServidor.PedidoGuardar request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///Cliente para Gestão do Sorteio
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::SDServidor.Resposta> ChaveWinRegisto(global::SDServidor.ChaveWin request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SDServidor.ListaAWin> ApostaWinLista(global::SDServidor.ApostaWinPedido request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(GreeterBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ApostaRegisto, serviceImpl.ApostaRegisto)
          .AddMethod(__Method_ApostaLista, serviceImpl.ApostaLista)
          .AddMethod(__Method_UtilizadorLista, serviceImpl.UtilizadorLista)
          .AddMethod(__Method_ApostaGuadar, serviceImpl.ApostaGuadar)
          .AddMethod(__Method_ChaveWinRegisto, serviceImpl.ChaveWinRegisto)
          .AddMethod(__Method_ApostaWinLista, serviceImpl.ApostaWinLista).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GreeterBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ApostaRegisto, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SDServidor.ApostaPedido, global::SDServidor.Resposta>(serviceImpl.ApostaRegisto));
      serviceBinder.AddMethod(__Method_ApostaLista, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SDServidor.ApostaListaPedido, global::SDServidor.ListaA>(serviceImpl.ApostaLista));
      serviceBinder.AddMethod(__Method_UtilizadorLista, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SDServidor.ListaUtilizadorPedido, global::SDServidor.ListaU>(serviceImpl.UtilizadorLista));
      serviceBinder.AddMethod(__Method_ApostaGuadar, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SDServidor.PedidoGuardar, global::SDServidor.Resposta>(serviceImpl.ApostaGuadar));
      serviceBinder.AddMethod(__Method_ChaveWinRegisto, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SDServidor.ChaveWin, global::SDServidor.Resposta>(serviceImpl.ChaveWinRegisto));
      serviceBinder.AddMethod(__Method_ApostaWinLista, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SDServidor.ApostaWinPedido, global::SDServidor.ListaAWin>(serviceImpl.ApostaWinLista));
    }

  }
}
#endregion
